// Generated by CoffeeScript 1.2.1-pre
(function() {

  $(function() {
    var AppRouter, PageRouter, PageTitle, PageTitleList, PageTitleView, PageTitles, PageTitlesApp, PageTitlesView;
    PageTitle = Backbone.Model.extend({
      defaults: function() {
        return {
          title: "",
          selected: false
        };
      },
      initialize: function() {
        if (!this.get('title')) {
          this.set({
            'title': this.defaults.title
          });
        }
        return this.set('selected', this.defaults.selected);
      },
      clear: function() {
        return this.destroy();
      }
    });
    PageTitleList = Backbone.Collection.extend({
      model: PageTitle,
      selectFirst: function() {
        if (this.length > 0) return this.at(0).set('selected', true);
      },
      selectPage: function(id) {
        return this.each(function(m) {
          return m.set('selected', m.id === id);
        });
      }
    });
    PageTitles = new PageTitleList;
    PageTitleView = Backbone.View.extend({
      tagName: 'li',
      template: _.template('<a href="#/pages/<%= id  %>"><%= title %></a>'),
      initialize: function() {
        this.model.bind('change', this.render, this);
        return this.model.bind('destroy', this.remove, this);
      },
      render: function() {
        this.$el.html(this.template(this.model.toJSON()));
        if (this.model.get('selected')) {
          return this.$el.addClass('active');
        } else {
          return this.$el.removeClass('active');
        }
      }
    });
    PageTitlesView = Backbone.View.extend({
      initialize: function() {
        return PageTitles.bind('reset', this.render, this);
      },
      addOne: function(page_title) {
        var view;
        view = new PageTitleView({
          model: page_title
        });
        view.render();
        return $('#page-titles').append(view.el);
      },
      render: function() {
        $('#page-titles').empty();
        return PageTitles.each(this.addOne);
      }
    });
    PageTitlesApp = new PageTitlesView;
    PageTitles.reset(gon.pageTitles);
    PageRouter = Backbone.Router.extend({
      routes: {
        'help': 'help',
        'pages/:id': 'getPage',
        '*actions': 'defaultRoute'
      },
      getPage: function(id) {
        return PageTitles.selectPage(parseInt(id));
      },
      defaultRoute: function(actions) {
        if (PageTitles.length > 0) return AppRouter.navigate('//pages/1');
      }
    });
    AppRouter = new PageRouter;
    return Backbone.history.start();
  });

}).call(this);
